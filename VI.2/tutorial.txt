# Deployment for Ubuntu 18.04 LTS on VirtualBox (Adapter 1 : NAT, Adapter 2 : Host-only Adaptater (vboxnet0 (ipv4 : 192.168.56.1, mask : 255.255.255.252)))
# User : arsciand
# Password : 1319
# Static IP : 192.168.56.2

/*
**	Initialisation
*/

* Update
$ sudo apt update && sudo apt upgrade

* Initialisation of static IP via netplan
$ sudo rm /etc/netplan/01-netcfg.yaml
$ sudo vi /etc/netplan/01-netcfg.yaml

>>>>
# This file describes the network interfaces available on your system
# For more information, see netplan(5).
network:
        version: 2
        renderer: networkd
        ethernets:
                enp0s3:
                        addresses: []
                        dhcp4: yes
                enp0s8:
                        addresses: [192.168.56.2/30]
                        dhcp4: no
                        dhcp6: no
                        nameservers:
                                addresses: [8.8.8.8,8.8.8.4]
====

$ sudo netplan apply

/*
**	Setup OpenSSH
*/

$ sudo apt install openssh-server

* Add id_rsa.pub to authorized_keys on server
[host] $ ssh-copy-id ~/.ssh/id_rsa.pub -i arsciand@192.168.56.2 #add user password

* Modify /etc/ssh/sshd_config
>>>>
...
- #Port 22
+ Port 2222
...
- #PermitRootLogin prohibit-password
+ PermitRootLogin no
...
- #PasswordAuthentification yes
+ PasswordAuthentification no
====

$ sudo service ssh restart

/*
** Installation of netdata (Web System Monitor)
*/

* Installation of dependency
$ sudo apt install git zlib1g-dev uuid-dev libmnl-dev gcc make autoconf autoconf-archive autogen automake pkg-config curl python python-yaml python-mysqldb python-psycopg2 nodejs lm-sensors netcat

* Cloning repo of netdata
$ git clone https://github.com/firehol/netdata.git --depth=1 ~/netdata
$ cd ~/netdata
$ sudo ./netdata-installer.ssh
$ Press [ENTER]

* Modify ram usage of netdata on /etc/netdata/netdata.conf
>>>>
...
[global]
...
- # history 3996
+ history 3600
====

* Optimisation of Netdata memory usage -> creation of /etc/rc.local
$ sudo vi /etc/rc.local
>>>>
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

echo 1 > /sys/kernel/mm/ksm/run
echo 1000 > /sys/kernel/mm/ksm/sleep_millisecs

exit 0
====
$ sudo chmod +x /etc/rc.local
$ sudo service netdata restart

/*
**	Set-up Nginx & Vhost for Netdata
*/

$ sudo apt install nginx

* Secure Nginx on /etc/nginx/nginx.conf
>>>>
- # server_tokens off;
+ server_token off;
====

$ sudo service nginx restart

* Creation of logs directory
$ mkdir ~/logs

* Creation of self-encrypted SSL key and certificate
$ sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/selfsigned.key -out /etc/ssl/certs/selfsigned.crt
>
Country Name (2 letter code) [AU]:FR
State or Province Name (full name) [Some-State]:75
Locality Name (eg, city) []:Paris
Organization Name (eg, company) [Internet Widgits Pty Ltd]:rs1
Organizational Unit Name (eg, section) []:rs1
Common Name (e.g. server FQDN or YOUR name) []:192.168.56.2
Email Address []:arsciand@student.42.fr
=

* Creation of Diffie-Hellman group
$ sudo mkdir /etc/ssl/dhparam
$ sudo openssl dhparam -dsaparam -out /etc/ssl/dhparam/dhparam.pem 4096

* Creation of Vhost for Netdata
$ sudo vi /etc/nginx/sites-available/netdata.conf
>>>>
###|NETDATA.CONF|###

	##Redirection

upstream backend {
	server 127.0.0.1:19999;
	keepalive 64;
}

server {
	listen 80;
	server_name 192.168.56.2;
	return 301 https://$server_name$request_uri;
}

	##BLOC

server {
        listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name  192.168.56.2;

        access_log  /home/arsciand/logs/netdata_acces.log;
        error_log /home/arsciand/logs/netdata_error.log error;

	#SSL

	ssl on;
	ssl_certificate	/etc/ssl/certs/selfsigned.crt;
	ssl_certificate_key /etc/ssl/private/selfsigned.key;
	ssl_dhparam /etc/ssl/dhparam/dhparam.pem;
        ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on;
	ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:100m;
        ssl_session_timeout  24h;
        ssl_stapling on;
        ssl_stapling_verify on;

        resolver 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 216.146.35.35 216.146.36.36 valid=300s;
        resolver_timeout 5s;

	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
	add_header Expect-CT "max-age=0";
	add_header X-Frame-Options DENY;
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Content-Type-Options nosniff;
	add_header X-Robots-Tag none;

	#BODY

	location / {
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_pass http://backend;
		proxy_http_version 1.1;
		proxy_pass_request_headers on;
		proxy_set_header Connection "keep-alive";
		proxy_store off;
	}

	location ~ /\. {
		deny all;
		access_log off;
		log_not_found off;
	}

	location ~ /\.well-known/acme-challenge {
		allow all;
	}
}
====
# Note some rules in this .conf may look overkill, but they are all necessary to obtain an A+ (Highest rate) rate on ssllabs.com

$ sudo ln -s /etc/nginx/sites-available/netdata.conf /etc/nginx/sites-enabled/netdata.conf
$ sudo ngninx -t
#If everything Ok, you should only get this warning : nginx: [warn] "ssl_stapling" ignored, issuer certificate not found for certificate "/etc/ssl/certs/selfsigned.crt"
#This happening if the certificate is not bundle properly with a registred CA.
$ sudo service nginx restart

# Navigate to http://192.168.56.2, you should get a warning on your browser for not trusted certificate. This is normal. You can see that the url is now under https://192.168.56.2.


/*
**		Configuration of Postfix
*/

$ sudo debconf-set-selections <<< "postfix postfix/main_mailer_type string 'No Configuration'"
$ sudo debconf-set-selections <<< "postfix postfix/mailname string rs1"
$ sudo apt install -y postfix

* Configuration file in /etc/postfix/main.cf
>>>>
# See /usr/share/postfix/main.cf.dist for a commented, more complete version


# Debian specific:  Specifying a file name will cause the first
# line of that file to be used as the name.  The Debian default
# is /etc/mailname.
#myorigin = /etc/mailname

smtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)
biff = no

# appending .domain is the MUA's job.
append_dot_mydomain = no

# Uncomment the next line to generate "delayed mail" warnings
#delay_warning_time = 4h

readme_directory = no

# See http://www.postfix.org/COMPATIBILITY_README.html -- default to 2 on
# fresh installs.
compatibility_level = 2

# TLS parameters
smtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
smtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
smtpd_use_tls=yes
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache

# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for
# information on enabling SSL in the smtp client.

smtpd_relay_restrictions = permit_mynetworks permit_sasl_authenticated defer_unauth_destination
myhostname = rs1.42.fr
alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases
mydestination = $myhostname, rs1, localhost.localdomain, , localhost
relayhost =
mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128
mailbox_size_limit = 0
recipient_delimiter = +
inet_interfaces = all
inet_protocols = ipv4
home_mailbox = Maildir/
virtual_alias_maps = hash:/etc/postfix/virtual
====

* Creating alias in /etc/postfix/virtual
>>>>
root@rs1 root
====

* Generating database
$ sudo postmap /etc/postfix/virtual

* Update env
$ echo 'export MAIL=~/Maildir' | sudo tee -a /etc/bash.bashrc | sudo tee -a /etc/profile.d/mail.sh
$ source /etc/profile.d/mail.sh

$ sudo service postfix restart

/*
**      Configuration of the Firewall (ufw)
*/

* Disable ipv6 in /etc/default/ufw
>>>>
- IPV6=yes
+ IPV6=no
====

$ sudo ufw enable
$ sudo ufw default deny incoming
$ sudo ufw default allow outgoing
$ sudo ufw allow 2222/tcp
$ sudo ufw allow 443/tcp
$ sudo ufw allow Postfix
$ sudo ufw reload

/*
**		Configuration of Fail2ban (DOS & Port Scan protection)
*/


$ sudo apt install fail2ban postfix

* Use custom jail.local instead of jail.conf


